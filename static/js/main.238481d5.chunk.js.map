{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","getRandomColor","color","i","Math","floor","random","Statistics","good","neutral","bad","total","positive","className","styles","wrap","style","label","FeedbackOptions","options","onLeaveFeedback","feedback_options","button","type","name","data-value","onClick","Section","title","children","Message","message","notification","App","state","event","target","setState","countTotalFeedback","countPositivePersentage","this","Notification","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.238481d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Statistics_label__1rz0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback_options\":\"FeedbackOptions_feedback_options__yAnY3\",\"button\":\"FeedbackOptions_button__n9QSW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__ROtkz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__38d18\"};","import PropTypes from \"prop-types\"\r\nimport styles from \"./Statistics.module.css\"\r\n\r\nfunction getRandomColor() {\r\n  let letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positive }) => {\r\n    return (\r\n        <div className={styles.wrap}>\r\n      <p style={{color: getRandomColor()}} className={styles.label}>Good: {good}</p>\r\n      <p style={{color: getRandomColor()}} className={styles.label}>Neutral: {neutral}</p>\r\n      <p style={{color: getRandomColor()}} className={styles.label}>Bad: {bad}</p>\r\n      <p style={{color: getRandomColor()}} className={styles.label}>Total: {total}</p>\r\n      <p style={{color: getRandomColor()}} className={styles.label}>Positive feedback: {positive}%</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  positive: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics","import PropTypes from \"prop-types\"\r\nimport styles from \"./FeedbackOptions.module.css\"\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    const { good, neutral, bad } = options\r\n    return (\r\n        <div className={styles.feedback_options}>\r\n      <button className={styles.button} type=\"button\" name=\"good\" data-value={good} onClick={onLeaveFeedback}>\r\n        Good\r\n      </button>\r\n\r\n      <button className={styles.button} type=\"button\" name=\"neutral\" data-value={neutral} onClick={onLeaveFeedback}>\r\n        Neutral\r\n      </button>\r\n\r\n      <button className={styles.button} type=\"button\" name=\"bad\" data-value={bad} onClick={onLeaveFeedback}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FeedbackOptions","import PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1 className={styles.title}>{title}</h1>\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Section\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}","import PropTypes from \"prop-types\";\r\nimport styles from \"./Notification.module.css\"\r\n\r\nconst Message = ({ message }) => <p className={styles.notification}>{message}</p>;\r\n\r\nexport default Message;\r\n\r\nMessage.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};","import { Component } from \"react\"\nimport Statistics from \"./components/Statistics/Statistics\"\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\"\nimport Section from \"./components/Section/Section\"\nimport Notification from \"./components/Notification/Notification\"\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n\n  onLeaveFeedback = (event) => {\n    const { name } = event.target\n    this.setState((state) => ({ [name]: state[name] + 1 }))\n  }\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state\n    return good + neutral + bad\n  }\n\n  countPositivePersentage = () => {\n    const { good } = this.state\n    return Math.floor((good / this.countTotalFeedback()) * 100)\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positive = this.countPositivePersentage();\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n        <Section title=\"Statistic\">\n          {total === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n              <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positive={positive}\n            />\n          )}\n        </Section>\n      </div>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/main.css\";\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}